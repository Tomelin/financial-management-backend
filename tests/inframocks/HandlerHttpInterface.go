// Code generated by mockery v2.50.0. DO NOT EDIT.

package inframocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// HandlerHttpInterface is an autogenerated mock type for the HandlerHttpInterface type
type HandlerHttpInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: c
func (_m *HandlerHttpInterface) Create(c *gin.Context) {
	_m.Called(c)
}

// Delete provides a mock function with given fields: c
func (_m *HandlerHttpInterface) Delete(c *gin.Context) {
	_m.Called(c)
}

// Get provides a mock function with given fields: c
func (_m *HandlerHttpInterface) Get(c *gin.Context) {
	_m.Called(c)
}

// GetByFilterMany provides a mock function with given fields: c
func (_m *HandlerHttpInterface) GetByFilterMany(c *gin.Context) {
	_m.Called(c)
}

// GetByFilterOne provides a mock function with given fields: c
func (_m *HandlerHttpInterface) GetByFilterOne(c *gin.Context) {
	_m.Called(c)
}

// GetById provides a mock function with given fields: c
func (_m *HandlerHttpInterface) GetById(c *gin.Context) {
	_m.Called(c)
}

// Update provides a mock function with given fields: c
func (_m *HandlerHttpInterface) Update(c *gin.Context) {
	_m.Called(c)
}

// NewHandlerHttpInterface creates a new instance of HandlerHttpInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHandlerHttpInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *HandlerHttpInterface {
	mock := &HandlerHttpInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
